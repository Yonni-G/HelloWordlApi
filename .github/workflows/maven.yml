name: Mon YAML de CI avec Docker

on:
  workflow_dispatch:  # Permet de lancer le pipeline manuellement

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout du code
        uses: actions/checkout@v3

      - name: ☕️ Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: 🛠️ Build avec Maven
        run: mvn clean install

      - name: 📦 Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: mon-app-java
          path: target/demo-0.0.1-SNAPSHOT.jar

  test:
    runs-on: ubuntu-latest
    needs: build  # Ce job ne s'exécute que si 'build' réussit
    steps:
      - name: 📥 Checkout du code
        uses: actions/checkout@v3

      - name: ☕️ Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: 📦 Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: mon-app-java

      - name: 🔬 Run tests
        run: mvn test

  docker-build:
    runs-on: ubuntu-latest
    needs: test  # ⬅️ Ce job s'exécute seulement si "test" réussit

    steps:
      - name: 📥 Checkout du code
        uses: actions/checkout@v3

      - name: 🐳 Connexion à Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: 🧱 Build de l'image Docker
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/mon-app-java:latest .

      - name: 🚀 Push de l'image vers Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/mon-app-java:latest
